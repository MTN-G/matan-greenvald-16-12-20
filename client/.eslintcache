[{"C:\\Users\\mgk27\\OneDrive\\שולחן העבודה\\projects\\matan-greenvald-16-12-20\\client\\src\\App.tsx":"1","C:\\Users\\mgk27\\OneDrive\\שולחן העבודה\\projects\\matan-greenvald-16-12-20\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\mgk27\\OneDrive\\שולחן העבודה\\projects\\matan-greenvald-16-12-20\\client\\src\\styles\\styledComponents.tsx":"3","C:\\Users\\mgk27\\OneDrive\\שולחן העבודה\\projects\\matan-greenvald-16-12-20\\client\\src\\index.tsx":"4"},{"size":3306,"mtime":1608208500538,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1608113966368,"results":"7","hashOfConfig":"6"},{"size":4047,"mtime":1608125714856,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":1608113966368,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1mt6d4y",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mgk27\\OneDrive\\שולחן העבודה\\projects\\matan-greenvald-16-12-20\\client\\src\\App.tsx",["19","20","21"],"import React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport { H1, StyledDiv, StyledUl, Wrapper } from './styles/styledComponents';\nimport { Button } from \"@material-ui/core\";\nimport image1 from './pics/gift-box-1.jpg'\nimport image2 from './pics/gift-box-2.jpg'\nimport image3 from './pics/gift-box-3.jpg'\n\nfunction List() {\n\n  const [items, setItems] = useState([1,2,3,4,5]);\n  const [stores, setStores] = useState([5,6,7,8,9]);\n\n  return (\n    <>\n    <H1 color={'green'}>What Are We Waiting For?</H1>\n    <Wrapper padding=\"100px\">\n      <Button>Add item</Button>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <StyledUl>\n          {items && items.map(item => <StyledDiv repeatFormula=\"1fr 1fr\">{ item }</StyledDiv>)}\n        </StyledUl>\n        <StyledUl>\n          {stores && stores.map(store => <StyledDiv repeatFormula=\" 1fr 1fr\">{store}</StyledDiv>)}\n        </StyledUl>\n      </div>\n      </Wrapper>\n    </>  \n  )\n}\n\nfunction Received () {\n  return (\n    <div>this is received</div>  \n  )\n}\n\ninterface CanvasProps {\n    width: number;\n    height: number;\n}\n\nconst Canvas = ({width, height} : CanvasProps) => {\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const contextRef = useRef(null);\n  \n\n  useEffect(() => {\n    const canvas : HTMLCanvasElement | null = canvasRef.current;\n    canvas!.width = window.innerWidth;\n    canvas!.height = window.innerHeight;\n    const ctx = canvas?.getContext(\"2d\");\n    const giftBox1: any = new Image(40, 40)\n    const giftBox2: any = new Image(40, 40) \n    const giftBox3: any = new Image(35,35) \n    giftBox1.src = image1;\n    giftBox2.src = image2;\n    giftBox3.src = image3;\n    const images: HTMLImageElement[] = [giftBox1, giftBox2, giftBox3]\n    giftBox3.onload = () => {\n      for (let i = 0; i < 12; i++) {\n        const latency: number = Math.random() * 2000;\n          setTimeout(() => {\n            let yAxis = 0\n            let xAxis = (i * 120)\n            giftsColumn(xAxis, yAxis, 5, 3)\n          }, latency);\n      }\n      \n    }\n\n    function giftsColumn(xAxis: number, yAxis: number, reapet: number, ppi: number) {\n      const currImage: HTMLImageElement = images[Math.floor(Math.random() * 3)]\n      setInterval(() => {\n        ctx!.clearRect(xAxis, yAxis - ppi, 100, 100)\n        ctx!.drawImage(currImage, xAxis, yAxis, 100, 100);\n        if (yAxis === Math.floor(canvas!.height / ppi / reapet) * ppi) {\n          giftsColumn(xAxis, 0, reapet, ppi)\n        }\n        yAxis += ppi\n      }, [20]);  \n    };\n    \n    // ctx!.fillStyle = 'red';\n    // ctx!.fillRect(20, 20, 50, 50)\n    // console.log(ctx, canvas)\n    \n   \n    \n  }, [])\n  \n\n  return (\n    <canvas ref={canvasRef} ></canvas> \n  )\n}\n\nfunction App  () {\n  return (\n    <Router>\n      <div className=\"App\">\n        <ul>\n          <li>\n            <Link to=\"/list\">My Orders</Link>\n          </li>\n          <li>\n            <Link to=\"/received\">Received</Link>\n          </li>\n        </ul>\n        \n      </div>\n      <Route exact path=\"/list\" component={List}></Route>\n      <Route exact path=\"/received\" component={Received}></Route>\n      <Route exact path=\"/canvas\" component={Canvas}></Route>\n    </Router>\n  );\n};\n\nexport default App;\n","C:\\Users\\mgk27\\OneDrive\\שולחן העבודה\\projects\\matan-greenvald-16-12-20\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\mgk27\\OneDrive\\שולחן העבודה\\projects\\matan-greenvald-16-12-20\\client\\src\\styles\\styledComponents.tsx",[],"C:\\Users\\mgk27\\OneDrive\\שולחן העבודה\\projects\\matan-greenvald-16-12-20\\client\\src\\index.tsx",[],{"ruleId":"22","severity":1,"message":"23","line":12,"column":17,"nodeType":"24","messageId":"25","endLine":12,"endColumn":25},{"ruleId":"22","severity":1,"message":"26","line":13,"column":18,"nodeType":"24","messageId":"25","endLine":13,"endColumn":27},{"ruleId":"22","severity":1,"message":"27","line":47,"column":9,"nodeType":"24","messageId":"25","endLine":47,"endColumn":19},"@typescript-eslint/no-unused-vars","'setItems' is assigned a value but never used.","Identifier","unusedVar","'setStores' is assigned a value but never used.","'contextRef' is assigned a value but never used."]